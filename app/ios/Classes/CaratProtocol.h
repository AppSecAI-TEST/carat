/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import "Thrift/protocol/TProtocol.h"
#import "Thrift/TApplicationException.h"
#import "Thrift/protocol/TProtocolUtil.h"
#import "Thrift/TProcessor.h"


typedef NSArray * ProcessInfoList;

typedef NSArray * HogsBugsList;

typedef NSArray * FeatureList;

@interface Registration : NSObject <NSCoding> {
    NSString * __uuId;
    double __timestamp;
    NSString * __platformId;
    NSString * __systemVersion;
    NSString * __systemDistribution;
    NSString * __kernelVersion;
    
    BOOL __uuId_isset;
    BOOL __timestamp_isset;
    BOOL __platformId_isset;
    BOOL __systemVersion_isset;
    BOOL __systemDistribution_isset;
    BOOL __kernelVersion_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=uuId, setter=setUuId:) NSString * uuId;
@property (nonatomic, getter=timestamp, setter=setTimestamp:) double timestamp;
@property (nonatomic, retain, getter=platformId, setter=setPlatformId:) NSString * platformId;
@property (nonatomic, retain, getter=systemVersion, setter=setSystemVersion:) NSString * systemVersion;
@property (nonatomic, retain, getter=systemDistribution, setter=setSystemDistribution:) NSString * systemDistribution;
@property (nonatomic, retain, getter=kernelVersion, setter=setKernelVersion:) NSString * kernelVersion;
#endif

- (id) initWithUuId: (NSString *) uuId timestamp: (double) timestamp platformId: (NSString *) platformId systemVersion: (NSString *) systemVersion systemDistribution: (NSString *) systemDistribution kernelVersion: (NSString *) kernelVersion;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) uuId;
- (void) setUuId: (NSString *) uuId;
- (BOOL) uuIdIsSet;

- (double) timestamp;
- (void) setTimestamp: (double) timestamp;
- (BOOL) timestampIsSet;

- (NSString *) platformId;
- (void) setPlatformId: (NSString *) platformId;
- (BOOL) platformIdIsSet;

- (NSString *) systemVersion;
- (void) setSystemVersion: (NSString *) systemVersion;
- (BOOL) systemVersionIsSet;

- (NSString *) systemDistribution;
- (void) setSystemDistribution: (NSString *) systemDistribution;
- (BOOL) systemDistributionIsSet;

- (NSString *) kernelVersion;
- (void) setKernelVersion: (NSString *) kernelVersion;
- (BOOL) kernelVersionIsSet;

@end

@interface ProcessInfo : NSObject <NSCoding> {
    int32_t __pId;
    NSString * __pName;
    NSString * __applicationLabel;
    BOOL __isSystemApp;
    NSString * __importance;
    
    BOOL __pId_isset;
    BOOL __pName_isset;
    BOOL __applicationLabel_isset;
    BOOL __isSystemApp_isset;
    BOOL __importance_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=pId, setter=setPId:) int32_t pId;
@property (nonatomic, retain, getter=pName, setter=setPName:) NSString * pName;
@property (nonatomic, retain, getter=applicationLabel, setter=setApplicationLabel:) NSString * applicationLabel;
@property (nonatomic, getter=isSystemApp, setter=setIsSystemApp:) BOOL isSystemApp;
@property (nonatomic, retain, getter=importance, setter=setImportance:) NSString * importance;
#endif

- (id) initWithPId: (int32_t) pId pName: (NSString *) pName applicationLabel: (NSString *) applicationLabel isSystemApp: (BOOL) isSystemApp importance: (NSString *) importance;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int32_t) pId;
- (void) setPId: (int32_t) pId;
- (BOOL) pIdIsSet;

- (NSString *) pName;
- (void) setPName: (NSString *) pName;
- (BOOL) pNameIsSet;

- (NSString *) applicationLabel;
- (void) setApplicationLabel: (NSString *) applicationLabel;
- (BOOL) applicationLabelIsSet;

- (BOOL) isSystemApp;
- (void) setIsSystemApp: (BOOL) isSystemApp;
- (BOOL) isSystemAppIsSet;

- (NSString *) importance;
- (void) setImportance: (NSString *) importance;
- (BOOL) importanceIsSet;

@end

@interface NetworkDetails : NSObject <NSCoding> {
    NSString * __networkType;
    NSString * __mobileNetworkType;
    NSString * __mobileDataStatus;
    NSString * __mobileDataActivity;
    BOOL __roamingEnabled;
    NSString * __wifiStatus;
    int32_t __wifiSignalStrength;
    int32_t __wifiLinkSpeed;
    
    BOOL __networkType_isset;
    BOOL __mobileNetworkType_isset;
    BOOL __mobileDataStatus_isset;
    BOOL __mobileDataActivity_isset;
    BOOL __roamingEnabled_isset;
    BOOL __wifiStatus_isset;
    BOOL __wifiSignalStrength_isset;
    BOOL __wifiLinkSpeed_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=networkType, setter=setNetworkType:) NSString * networkType;
@property (nonatomic, retain, getter=mobileNetworkType, setter=setMobileNetworkType:) NSString * mobileNetworkType;
@property (nonatomic, retain, getter=mobileDataStatus, setter=setMobileDataStatus:) NSString * mobileDataStatus;
@property (nonatomic, retain, getter=mobileDataActivity, setter=setMobileDataActivity:) NSString * mobileDataActivity;
@property (nonatomic, getter=roamingEnabled, setter=setRoamingEnabled:) BOOL roamingEnabled;
@property (nonatomic, retain, getter=wifiStatus, setter=setWifiStatus:) NSString * wifiStatus;
@property (nonatomic, getter=wifiSignalStrength, setter=setWifiSignalStrength:) int32_t wifiSignalStrength;
@property (nonatomic, getter=wifiLinkSpeed, setter=setWifiLinkSpeed:) int32_t wifiLinkSpeed;
#endif

- (id) initWithNetworkType: (NSString *) networkType mobileNetworkType: (NSString *) mobileNetworkType mobileDataStatus: (NSString *) mobileDataStatus mobileDataActivity: (NSString *) mobileDataActivity roamingEnabled: (BOOL) roamingEnabled wifiStatus: (NSString *) wifiStatus wifiSignalStrength: (int32_t) wifiSignalStrength wifiLinkSpeed: (int32_t) wifiLinkSpeed;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) networkType;
- (void) setNetworkType: (NSString *) networkType;
- (BOOL) networkTypeIsSet;

- (NSString *) mobileNetworkType;
- (void) setMobileNetworkType: (NSString *) mobileNetworkType;
- (BOOL) mobileNetworkTypeIsSet;

- (NSString *) mobileDataStatus;
- (void) setMobileDataStatus: (NSString *) mobileDataStatus;
- (BOOL) mobileDataStatusIsSet;

- (NSString *) mobileDataActivity;
- (void) setMobileDataActivity: (NSString *) mobileDataActivity;
- (BOOL) mobileDataActivityIsSet;

- (BOOL) roamingEnabled;
- (void) setRoamingEnabled: (BOOL) roamingEnabled;
- (BOOL) roamingEnabledIsSet;

- (NSString *) wifiStatus;
- (void) setWifiStatus: (NSString *) wifiStatus;
- (BOOL) wifiStatusIsSet;

- (int32_t) wifiSignalStrength;
- (void) setWifiSignalStrength: (int32_t) wifiSignalStrength;
- (BOOL) wifiSignalStrengthIsSet;

- (int32_t) wifiLinkSpeed;
- (void) setWifiLinkSpeed: (int32_t) wifiLinkSpeed;
- (BOOL) wifiLinkSpeedIsSet;

@end

@interface BatteryDetails : NSObject <NSCoding> {
    NSString * __batteryCharger;
    NSString * __batteryHealth;
    double __batteryVoltage;
    double __batteryTemperature;
    NSString * __batteryTechnology;
    double __batteryCapacity;
    
    BOOL __batteryCharger_isset;
    BOOL __batteryHealth_isset;
    BOOL __batteryVoltage_isset;
    BOOL __batteryTemperature_isset;
    BOOL __batteryTechnology_isset;
    BOOL __batteryCapacity_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=batteryCharger, setter=setBatteryCharger:) NSString * batteryCharger;
@property (nonatomic, retain, getter=batteryHealth, setter=setBatteryHealth:) NSString * batteryHealth;
@property (nonatomic, getter=batteryVoltage, setter=setBatteryVoltage:) double batteryVoltage;
@property (nonatomic, getter=batteryTemperature, setter=setBatteryTemperature:) double batteryTemperature;
@property (nonatomic, retain, getter=batteryTechnology, setter=setBatteryTechnology:) NSString * batteryTechnology;
@property (nonatomic, getter=batteryCapacity, setter=setBatteryCapacity:) double batteryCapacity;
#endif

- (id) initWithBatteryCharger: (NSString *) batteryCharger batteryHealth: (NSString *) batteryHealth batteryVoltage: (double) batteryVoltage batteryTemperature: (double) batteryTemperature batteryTechnology: (NSString *) batteryTechnology batteryCapacity: (double) batteryCapacity;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) batteryCharger;
- (void) setBatteryCharger: (NSString *) batteryCharger;
- (BOOL) batteryChargerIsSet;

- (NSString *) batteryHealth;
- (void) setBatteryHealth: (NSString *) batteryHealth;
- (BOOL) batteryHealthIsSet;

- (double) batteryVoltage;
- (void) setBatteryVoltage: (double) batteryVoltage;
- (BOOL) batteryVoltageIsSet;

- (double) batteryTemperature;
- (void) setBatteryTemperature: (double) batteryTemperature;
- (BOOL) batteryTemperatureIsSet;

- (NSString *) batteryTechnology;
- (void) setBatteryTechnology: (NSString *) batteryTechnology;
- (BOOL) batteryTechnologyIsSet;

- (double) batteryCapacity;
- (void) setBatteryCapacity: (double) batteryCapacity;
- (BOOL) batteryCapacityIsSet;

@end

@interface CpuStatus : NSObject <NSCoding> {
    double __cpuUsage;
    double __uptime;
    
    BOOL __cpuUsage_isset;
    BOOL __uptime_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=cpuUsage, setter=setCpuUsage:) double cpuUsage;
@property (nonatomic, getter=uptime, setter=setUptime:) double uptime;
#endif

- (id) initWithCpuUsage: (double) cpuUsage uptime: (double) uptime;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (double) cpuUsage;
- (void) setCpuUsage: (double) cpuUsage;
- (BOOL) cpuUsageIsSet;

- (double) uptime;
- (void) setUptime: (double) uptime;
- (BOOL) uptimeIsSet;

@end

@interface CallInfo : NSObject <NSCoding> {
    double __incomingCallTime;
    double __outgoingCallTime;
    double __nonCallTime;
    NSString * __callStatus;
    
    BOOL __incomingCallTime_isset;
    BOOL __outgoingCallTime_isset;
    BOOL __nonCallTime_isset;
    BOOL __callStatus_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=incomingCallTime, setter=setIncomingCallTime:) double incomingCallTime;
@property (nonatomic, getter=outgoingCallTime, setter=setOutgoingCallTime:) double outgoingCallTime;
@property (nonatomic, getter=nonCallTime, setter=setNonCallTime:) double nonCallTime;
@property (nonatomic, retain, getter=callStatus, setter=setCallStatus:) NSString * callStatus;
#endif

- (id) initWithIncomingCallTime: (double) incomingCallTime outgoingCallTime: (double) outgoingCallTime nonCallTime: (double) nonCallTime callStatus: (NSString *) callStatus;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (double) incomingCallTime;
- (void) setIncomingCallTime: (double) incomingCallTime;
- (BOOL) incomingCallTimeIsSet;

- (double) outgoingCallTime;
- (void) setOutgoingCallTime: (double) outgoingCallTime;
- (BOOL) outgoingCallTimeIsSet;

- (double) nonCallTime;
- (void) setNonCallTime: (double) nonCallTime;
- (BOOL) nonCallTimeIsSet;

- (NSString *) callStatus;
- (void) setCallStatus: (NSString *) callStatus;
- (BOOL) callStatusIsSet;

@end

@interface Sample : NSObject <NSCoding> {
    NSString * __uuId;
    double __timestamp;
    ProcessInfoList __piList;
    NSString * __batteryState;
    double __batteryLevel;
    int32_t __memoryWired;
    int32_t __memoryActive;
    int32_t __memoryInactive;
    int32_t __memoryFree;
    int32_t __memoryUser;
    NSString * __triggeredBy;
    NSString * __networkStatus;
    double __distanceTraveled;
    int32_t __screenBrightness;
    NetworkDetails * __networkDetails;
    BatteryDetails * __batteryDetails;
    CpuStatus * __cpuStatus;
    NSArray * __locationProviders;
    CallInfo * __callInfo;
    
    BOOL __uuId_isset;
    BOOL __timestamp_isset;
    BOOL __piList_isset;
    BOOL __batteryState_isset;
    BOOL __batteryLevel_isset;
    BOOL __memoryWired_isset;
    BOOL __memoryActive_isset;
    BOOL __memoryInactive_isset;
    BOOL __memoryFree_isset;
    BOOL __memoryUser_isset;
    BOOL __triggeredBy_isset;
    BOOL __networkStatus_isset;
    BOOL __distanceTraveled_isset;
    BOOL __screenBrightness_isset;
    BOOL __networkDetails_isset;
    BOOL __batteryDetails_isset;
    BOOL __cpuStatus_isset;
    BOOL __locationProviders_isset;
    BOOL __callInfo_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=uuId, setter=setUuId:) NSString * uuId;
@property (nonatomic, getter=timestamp, setter=setTimestamp:) double timestamp;
@property (nonatomic, retain, getter=piList, setter=setPiList:) ProcessInfoList piList;
@property (nonatomic, retain, getter=batteryState, setter=setBatteryState:) NSString * batteryState;
@property (nonatomic, getter=batteryLevel, setter=setBatteryLevel:) double batteryLevel;
@property (nonatomic, getter=memoryWired, setter=setMemoryWired:) int32_t memoryWired;
@property (nonatomic, getter=memoryActive, setter=setMemoryActive:) int32_t memoryActive;
@property (nonatomic, getter=memoryInactive, setter=setMemoryInactive:) int32_t memoryInactive;
@property (nonatomic, getter=memoryFree, setter=setMemoryFree:) int32_t memoryFree;
@property (nonatomic, getter=memoryUser, setter=setMemoryUser:) int32_t memoryUser;
@property (nonatomic, retain, getter=triggeredBy, setter=setTriggeredBy:) NSString * triggeredBy;
@property (nonatomic, retain, getter=networkStatus, setter=setNetworkStatus:) NSString * networkStatus;
@property (nonatomic, getter=distanceTraveled, setter=setDistanceTraveled:) double distanceTraveled;
@property (nonatomic, getter=screenBrightness, setter=setScreenBrightness:) int32_t screenBrightness;
@property (nonatomic, retain, getter=networkDetails, setter=setNetworkDetails:) NetworkDetails * networkDetails;
@property (nonatomic, retain, getter=batteryDetails, setter=setBatteryDetails:) BatteryDetails * batteryDetails;
@property (nonatomic, retain, getter=cpuStatus, setter=setCpuStatus:) CpuStatus * cpuStatus;
@property (nonatomic, retain, getter=locationProviders, setter=setLocationProviders:) NSArray * locationProviders;
@property (nonatomic, retain, getter=callInfo, setter=setCallInfo:) CallInfo * callInfo;
#endif

- (id) initWithUuId: (NSString *) uuId timestamp: (double) timestamp piList: (ProcessInfoList) piList batteryState: (NSString *) batteryState batteryLevel: (double) batteryLevel memoryWired: (int32_t) memoryWired memoryActive: (int32_t) memoryActive memoryInactive: (int32_t) memoryInactive memoryFree: (int32_t) memoryFree memoryUser: (int32_t) memoryUser triggeredBy: (NSString *) triggeredBy networkStatus: (NSString *) networkStatus distanceTraveled: (double) distanceTraveled screenBrightness: (int32_t) screenBrightness networkDetails: (NetworkDetails *) networkDetails batteryDetails: (BatteryDetails *) batteryDetails cpuStatus: (CpuStatus *) cpuStatus locationProviders: (NSArray *) locationProviders callInfo: (CallInfo *) callInfo;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) uuId;
- (void) setUuId: (NSString *) uuId;
- (BOOL) uuIdIsSet;

- (double) timestamp;
- (void) setTimestamp: (double) timestamp;
- (BOOL) timestampIsSet;

- (ProcessInfoList) piList;
- (void) setPiList: (ProcessInfoList) piList;
- (BOOL) piListIsSet;

- (NSString *) batteryState;
- (void) setBatteryState: (NSString *) batteryState;
- (BOOL) batteryStateIsSet;

- (double) batteryLevel;
- (void) setBatteryLevel: (double) batteryLevel;
- (BOOL) batteryLevelIsSet;

- (int32_t) memoryWired;
- (void) setMemoryWired: (int32_t) memoryWired;
- (BOOL) memoryWiredIsSet;

- (int32_t) memoryActive;
- (void) setMemoryActive: (int32_t) memoryActive;
- (BOOL) memoryActiveIsSet;

- (int32_t) memoryInactive;
- (void) setMemoryInactive: (int32_t) memoryInactive;
- (BOOL) memoryInactiveIsSet;

- (int32_t) memoryFree;
- (void) setMemoryFree: (int32_t) memoryFree;
- (BOOL) memoryFreeIsSet;

- (int32_t) memoryUser;
- (void) setMemoryUser: (int32_t) memoryUser;
- (BOOL) memoryUserIsSet;

- (NSString *) triggeredBy;
- (void) setTriggeredBy: (NSString *) triggeredBy;
- (BOOL) triggeredByIsSet;

- (NSString *) networkStatus;
- (void) setNetworkStatus: (NSString *) networkStatus;
- (BOOL) networkStatusIsSet;

- (double) distanceTraveled;
- (void) setDistanceTraveled: (double) distanceTraveled;
- (BOOL) distanceTraveledIsSet;

- (int32_t) screenBrightness;
- (void) setScreenBrightness: (int32_t) screenBrightness;
- (BOOL) screenBrightnessIsSet;

- (NetworkDetails *) networkDetails;
- (void) setNetworkDetails: (NetworkDetails *) networkDetails;
- (BOOL) networkDetailsIsSet;

- (BatteryDetails *) batteryDetails;
- (void) setBatteryDetails: (BatteryDetails *) batteryDetails;
- (BOOL) batteryDetailsIsSet;

- (CpuStatus *) cpuStatus;
- (void) setCpuStatus: (CpuStatus *) cpuStatus;
- (BOOL) cpuStatusIsSet;

- (NSArray *) locationProviders;
- (void) setLocationProviders: (NSArray *) locationProviders;
- (BOOL) locationProvidersIsSet;

- (CallInfo *) callInfo;
- (void) setCallInfo: (CallInfo *) callInfo;
- (BOOL) callInfoIsSet;

@end

@interface DetailScreenReport : NSObject <NSCoding> {
    double __score;
    NSArray * __xVals;
    NSArray * __yVals;
    double __expectedValue;
    double __error;
    double __errorWithout;
    double __samples;
    double __samplesWithout;
    
    BOOL __score_isset;
    BOOL __xVals_isset;
    BOOL __yVals_isset;
    BOOL __expectedValue_isset;
    BOOL __error_isset;
    BOOL __errorWithout_isset;
    BOOL __samples_isset;
    BOOL __samplesWithout_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=score, setter=setScore:) double score;
@property (nonatomic, retain, getter=xVals, setter=setXVals:) NSArray * xVals;
@property (nonatomic, retain, getter=yVals, setter=setYVals:) NSArray * yVals;
@property (nonatomic, getter=expectedValue, setter=setExpectedValue:) double expectedValue;
@property (nonatomic, getter=error, setter=setError:) double error;
@property (nonatomic, getter=errorWithout, setter=setErrorWithout:) double errorWithout;
@property (nonatomic, getter=samples, setter=setSamples:) double samples;
@property (nonatomic, getter=samplesWithout, setter=setSamplesWithout:) double samplesWithout;
#endif

- (id) initWithScore: (double) score xVals: (NSArray *) xVals yVals: (NSArray *) yVals expectedValue: (double) expectedValue error: (double) error errorWithout: (double) errorWithout samples: (double) samples samplesWithout: (double) samplesWithout;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (double) score;
- (void) setScore: (double) score;
- (BOOL) scoreIsSet;

- (NSArray *) xVals;
- (void) setXVals: (NSArray *) xVals;
- (BOOL) xValsIsSet;

- (NSArray *) yVals;
- (void) setYVals: (NSArray *) yVals;
- (BOOL) yValsIsSet;

- (double) expectedValue;
- (void) setExpectedValue: (double) expectedValue;
- (BOOL) expectedValueIsSet;

- (double) error;
- (void) setError: (double) error;
- (BOOL) errorIsSet;

- (double) errorWithout;
- (void) setErrorWithout: (double) errorWithout;
- (BOOL) errorWithoutIsSet;

- (double) samples;
- (void) setSamples: (double) samples;
- (BOOL) samplesIsSet;

- (double) samplesWithout;
- (void) setSamplesWithout: (double) samplesWithout;
- (BOOL) samplesWithoutIsSet;

@end

@interface Reports : NSObject <NSCoding> {
    double __jScore;
    DetailScreenReport * __os;
    DetailScreenReport * __osWithout;
    DetailScreenReport * __model;
    DetailScreenReport * __modelWithout;
    DetailScreenReport * __similarApps;
    DetailScreenReport * __similarAppsWithout;
    double __changeSinceLastWeek;
    double __changeSinceLastWeekPercentage;
    DetailScreenReport * __jScoreWith;
    DetailScreenReport * __jScoreWithout;
    
    BOOL __jScore_isset;
    BOOL __os_isset;
    BOOL __osWithout_isset;
    BOOL __model_isset;
    BOOL __modelWithout_isset;
    BOOL __similarApps_isset;
    BOOL __similarAppsWithout_isset;
    BOOL __changeSinceLastWeek_isset;
    BOOL __changeSinceLastWeekPercentage_isset;
    BOOL __jScoreWith_isset;
    BOOL __jScoreWithout_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=jScore, setter=setJScore:) double jScore;
@property (nonatomic, retain, getter=os, setter=setOs:) DetailScreenReport * os;
@property (nonatomic, retain, getter=osWithout, setter=setOsWithout:) DetailScreenReport * osWithout;
@property (nonatomic, retain, getter=model, setter=setModel:) DetailScreenReport * model;
@property (nonatomic, retain, getter=modelWithout, setter=setModelWithout:) DetailScreenReport * modelWithout;
@property (nonatomic, retain, getter=similarApps, setter=setSimilarApps:) DetailScreenReport * similarApps;
@property (nonatomic, retain, getter=similarAppsWithout, setter=setSimilarAppsWithout:) DetailScreenReport * similarAppsWithout;
@property (nonatomic, getter=changeSinceLastWeek, setter=setChangeSinceLastWeek:) double changeSinceLastWeek;
@property (nonatomic, getter=changeSinceLastWeekPercentage, setter=setChangeSinceLastWeekPercentage:) double changeSinceLastWeekPercentage;
@property (nonatomic, retain, getter=jScoreWith, setter=setJScoreWith:) DetailScreenReport * jScoreWith;
@property (nonatomic, retain, getter=jScoreWithout, setter=setJScoreWithout:) DetailScreenReport * jScoreWithout;
#endif

- (id) initWithJScore: (double) jScore os: (DetailScreenReport *) os osWithout: (DetailScreenReport *) osWithout model: (DetailScreenReport *) model modelWithout: (DetailScreenReport *) modelWithout similarApps: (DetailScreenReport *) similarApps similarAppsWithout: (DetailScreenReport *) similarAppsWithout changeSinceLastWeek: (double) changeSinceLastWeek changeSinceLastWeekPercentage: (double) changeSinceLastWeekPercentage jScoreWith: (DetailScreenReport *) jScoreWith jScoreWithout: (DetailScreenReport *) jScoreWithout;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (double) jScore;
- (void) setJScore: (double) jScore;
- (BOOL) jScoreIsSet;

- (DetailScreenReport *) os;
- (void) setOs: (DetailScreenReport *) os;
- (BOOL) osIsSet;

- (DetailScreenReport *) osWithout;
- (void) setOsWithout: (DetailScreenReport *) osWithout;
- (BOOL) osWithoutIsSet;

- (DetailScreenReport *) model;
- (void) setModel: (DetailScreenReport *) model;
- (BOOL) modelIsSet;

- (DetailScreenReport *) modelWithout;
- (void) setModelWithout: (DetailScreenReport *) modelWithout;
- (BOOL) modelWithoutIsSet;

- (DetailScreenReport *) similarApps;
- (void) setSimilarApps: (DetailScreenReport *) similarApps;
- (BOOL) similarAppsIsSet;

- (DetailScreenReport *) similarAppsWithout;
- (void) setSimilarAppsWithout: (DetailScreenReport *) similarAppsWithout;
- (BOOL) similarAppsWithoutIsSet;

- (double) changeSinceLastWeek;
- (void) setChangeSinceLastWeek: (double) changeSinceLastWeek;
- (BOOL) changeSinceLastWeekIsSet;

- (double) changeSinceLastWeekPercentage;
- (void) setChangeSinceLastWeekPercentage: (double) changeSinceLastWeekPercentage;
- (BOOL) changeSinceLastWeekPercentageIsSet;

- (DetailScreenReport *) jScoreWith;
- (void) setJScoreWith: (DetailScreenReport *) jScoreWith;
- (BOOL) jScoreWithIsSet;

- (DetailScreenReport *) jScoreWithout;
- (void) setJScoreWithout: (DetailScreenReport *) jScoreWithout;
- (BOOL) jScoreWithoutIsSet;

@end

@interface HogsBugs : NSObject <NSCoding> {
    NSString * __appName;
    double __wDistance;
    NSArray * __xVals;
    NSArray * __yVals;
    NSArray * __xValsWithout;
    NSArray * __yValsWithout;
    double __expectedValue;
    double __expectedValueWithout;
    double __error;
    double __errorWithout;
    double __samples;
    double __samplesWithout;
    NSString * __appLabel;
    NSString * __appPriority;
    
    BOOL __appName_isset;
    BOOL __wDistance_isset;
    BOOL __xVals_isset;
    BOOL __yVals_isset;
    BOOL __xValsWithout_isset;
    BOOL __yValsWithout_isset;
    BOOL __expectedValue_isset;
    BOOL __expectedValueWithout_isset;
    BOOL __error_isset;
    BOOL __errorWithout_isset;
    BOOL __samples_isset;
    BOOL __samplesWithout_isset;
    BOOL __appLabel_isset;
    BOOL __appPriority_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=appName, setter=setAppName:) NSString * appName;
@property (nonatomic, getter=wDistance, setter=setWDistance:) double wDistance;
@property (nonatomic, retain, getter=xVals, setter=setXVals:) NSArray * xVals;
@property (nonatomic, retain, getter=yVals, setter=setYVals:) NSArray * yVals;
@property (nonatomic, retain, getter=xValsWithout, setter=setXValsWithout:) NSArray * xValsWithout;
@property (nonatomic, retain, getter=yValsWithout, setter=setYValsWithout:) NSArray * yValsWithout;
@property (nonatomic, getter=expectedValue, setter=setExpectedValue:) double expectedValue;
@property (nonatomic, getter=expectedValueWithout, setter=setExpectedValueWithout:) double expectedValueWithout;
@property (nonatomic, getter=error, setter=setError:) double error;
@property (nonatomic, getter=errorWithout, setter=setErrorWithout:) double errorWithout;
@property (nonatomic, getter=samples, setter=setSamples:) double samples;
@property (nonatomic, getter=samplesWithout, setter=setSamplesWithout:) double samplesWithout;
@property (nonatomic, retain, getter=appLabel, setter=setAppLabel:) NSString * appLabel;
@property (nonatomic, retain, getter=appPriority, setter=setAppPriority:) NSString * appPriority;
#endif

- (id) initWithAppName: (NSString *) appName wDistance: (double) wDistance xVals: (NSArray *) xVals yVals: (NSArray *) yVals xValsWithout: (NSArray *) xValsWithout yValsWithout: (NSArray *) yValsWithout expectedValue: (double) expectedValue expectedValueWithout: (double) expectedValueWithout error: (double) error errorWithout: (double) errorWithout samples: (double) samples samplesWithout: (double) samplesWithout appLabel: (NSString *) appLabel appPriority: (NSString *) appPriority;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) appName;
- (void) setAppName: (NSString *) appName;
- (BOOL) appNameIsSet;

- (double) wDistance;
- (void) setWDistance: (double) wDistance;
- (BOOL) wDistanceIsSet;

- (NSArray *) xVals;
- (void) setXVals: (NSArray *) xVals;
- (BOOL) xValsIsSet;

- (NSArray *) yVals;
- (void) setYVals: (NSArray *) yVals;
- (BOOL) yValsIsSet;

- (NSArray *) xValsWithout;
- (void) setXValsWithout: (NSArray *) xValsWithout;
- (BOOL) xValsWithoutIsSet;

- (NSArray *) yValsWithout;
- (void) setYValsWithout: (NSArray *) yValsWithout;
- (BOOL) yValsWithoutIsSet;

- (double) expectedValue;
- (void) setExpectedValue: (double) expectedValue;
- (BOOL) expectedValueIsSet;

- (double) expectedValueWithout;
- (void) setExpectedValueWithout: (double) expectedValueWithout;
- (BOOL) expectedValueWithoutIsSet;

- (double) error;
- (void) setError: (double) error;
- (BOOL) errorIsSet;

- (double) errorWithout;
- (void) setErrorWithout: (double) errorWithout;
- (BOOL) errorWithoutIsSet;

- (double) samples;
- (void) setSamples: (double) samples;
- (BOOL) samplesIsSet;

- (double) samplesWithout;
- (void) setSamplesWithout: (double) samplesWithout;
- (BOOL) samplesWithoutIsSet;

- (NSString *) appLabel;
- (void) setAppLabel: (NSString *) appLabel;
- (BOOL) appLabelIsSet;

- (NSString *) appPriority;
- (void) setAppPriority: (NSString *) appPriority;
- (BOOL) appPriorityIsSet;

@end

@interface HogBugReport : NSObject <NSCoding> {
    NSString * __uuId;
    HogsBugsList __hbList;
    
    BOOL __uuId_isset;
    BOOL __hbList_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=uuId, setter=setUuId:) NSString * uuId;
@property (nonatomic, retain, getter=hbList, setter=setHbList:) HogsBugsList hbList;
#endif

- (id) initWithUuId: (NSString *) uuId hbList: (HogsBugsList) hbList;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) uuId;
- (void) setUuId: (NSString *) uuId;
- (BOOL) uuIdIsSet;

- (HogsBugsList) hbList;
- (void) setHbList: (HogsBugsList) hbList;
- (BOOL) hbListIsSet;

@end

@interface Feature : NSObject <NSCoding> {
    NSString * __key;
    NSString * __value;
    
    BOOL __key_isset;
    BOOL __value_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=key, setter=setKey:) NSString * key;
@property (nonatomic, retain, getter=value, setter=setValue:) NSString * value;
#endif

- (id) initWithKey: (NSString *) key value: (NSString *) value;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) key;
- (void) setKey: (NSString *) key;
- (BOOL) keyIsSet;

- (NSString *) value;
- (void) setValue: (NSString *) value;
- (BOOL) valueIsSet;

@end

@protocol CaratService <NSObject>
- (void) registerMe: (Registration *) registration;  // throws TException
- (BOOL) uploadSample: (Sample *) sample;  // throws TException
- (Reports *) getReports: (NSString *) uuId : (FeatureList) features;  // throws TException
- (HogBugReport *) getHogOrBugReport: (NSString *) uuId : (FeatureList) features;  // throws TException
- (HogBugReport *) getQuickHogsAndMaybeRegister: (Registration *) registration : (NSArray *) processList;  // throws TException
@end

@interface CaratServiceClient : NSObject <CaratService> {
    id <TProtocol> inProtocol;
    id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface CaratServiceProcessor : NSObject <TProcessor> {
    id <CaratService> mService;
    NSDictionary * mMethodMap;
}
- (id) initWithCaratService: (id <CaratService>) service;
- (id<CaratService>) service;
@end

@interface CaratProtocolConstants : NSObject {
}
@end
