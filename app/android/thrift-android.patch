diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/BatteryDetails.java android/edu/berkeley/cs/amplab/carat/thrift/BatteryDetails.java
--- java/edu/berkeley/cs/amplab/carat/thrift/BatteryDetails.java	2012-10-03 10:26:45.236525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/BatteryDetails.java	2012-10-03 10:23:30.880520643 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class BatteryDetails implements org.apache.thrift.TBase<BatteryDetails, BatteryDetails._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BatteryDetails");
@@ -328,7 +326,6 @@
   public void setBatteryCapacityIsSet(boolean value) {
     __isset_bit_vector.set(__BATTERYCAPACITY_ISSET_ID, value);
   }
-
   public void setFieldValue(_Fields field, Object value) {
     switch (field) {
     case BATTERY_CHARGER:
@@ -401,7 +398,6 @@
 
     case BATTERY_CAPACITY:
       return Double.valueOf(getBatteryCapacity());
-
     }
     throw new IllegalStateException();
   }
@@ -495,7 +491,6 @@
       if (this.batteryCapacity != that.batteryCapacity)
         return false;
     }
-
     return true;
   }
 
@@ -651,7 +646,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -661,7 +656,7 @@
       __isset_bit_vector = new BitSet(1);
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/CallInfo.java android/edu/berkeley/cs/amplab/carat/thrift/CallInfo.java
--- java/edu/berkeley/cs/amplab/carat/thrift/CallInfo.java	2012-10-03 10:26:45.240525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/CallInfo.java	2012-10-03 10:23:30.896520639 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class CallInfo implements org.apache.thrift.TBase<CallInfo, CallInfo._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CallInfo");
@@ -497,7 +495,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -507,7 +505,7 @@
       __isset_bit_vector = new BitSet(1);
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/CaratService.java android/edu/berkeley/cs/amplab/carat/thrift/CaratService.java
--- java/edu/berkeley/cs/amplab/carat/thrift/CaratService.java	2012-10-03 10:26:45.236525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/CaratService.java	2012-10-03 10:23:30.880520643 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class CaratService {
 
@@ -310,7 +308,7 @@
   }
 
   public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
-    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
+    //private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
     public Processor(I iface) {
       super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
     }
@@ -648,7 +646,7 @@
       try {
         write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -656,7 +654,7 @@
       try {
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -1003,7 +1001,7 @@
       try {
         write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -1011,7 +1009,7 @@
       try {
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -1357,7 +1355,7 @@
       try {
         write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -1365,7 +1363,7 @@
       try {
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -1800,7 +1798,7 @@
       try {
         write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -1808,7 +1806,7 @@
       try {
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -2210,7 +2208,7 @@
       try {
         write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -2218,7 +2216,7 @@
       try {
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -2657,7 +2655,7 @@
       try {
         write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -2665,7 +2663,7 @@
       try {
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -3067,7 +3065,7 @@
       try {
         write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
@@ -3075,7 +3073,7 @@
       try {
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
-        throw new java.io.IOException(te);
+        throw new java.io.IOException(te.getMessage());
       }
     }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/CpuStatus.java android/edu/berkeley/cs/amplab/carat/thrift/CpuStatus.java
--- java/edu/berkeley/cs/amplab/carat/thrift/CpuStatus.java	2012-10-03 10:26:45.240525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/CpuStatus.java	2012-10-03 10:23:30.880520643 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class CpuStatus implements org.apache.thrift.TBase<CpuStatus, CpuStatus._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CpuStatus");
@@ -348,7 +346,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -358,7 +356,7 @@
       __isset_bit_vector = new BitSet(1);
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/DetailScreenReport.java android/edu/berkeley/cs/amplab/carat/thrift/DetailScreenReport.java
--- java/edu/berkeley/cs/amplab/carat/thrift/DetailScreenReport.java	2012-10-03 10:26:45.240525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/DetailScreenReport.java	2012-10-03 10:23:30.896520639 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class DetailScreenReport implements org.apache.thrift.TBase<DetailScreenReport, DetailScreenReport._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DetailScreenReport");
@@ -389,7 +387,6 @@
   public void setErrorWithoutIsSet(boolean value) {
     __isset_bit_vector.set(__ERRORWITHOUT_ISSET_ID, value);
   }
-
   public double getSamples() {
     return this.samples;
   }
@@ -485,7 +482,6 @@
         setErrorWithout((Double)value);
       }
       break;
-
     case SAMPLES:
       if (value == null) {
         unsetSamples();
@@ -524,10 +520,8 @@
 
     case ERROR_WITHOUT:
       return Double.valueOf(getErrorWithout());
-
     case SAMPLES:
       return Double.valueOf(getSamples());
-
     case SAMPLES_WITHOUT:
       return Double.valueOf(getSamplesWithout());
 
@@ -628,7 +622,6 @@
       if (this.errorWithout != that.errorWithout)
         return false;
     }
-
     boolean this_present_samples = true && this.isSetSamples();
     boolean that_present_samples = true && that.isSetSamples();
     if (this_present_samples || that_present_samples) {
@@ -830,7 +823,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -840,7 +833,7 @@
       __isset_bit_vector = new BitSet(1);
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/Feature.java android/edu/berkeley/cs/amplab/carat/thrift/Feature.java
--- java/edu/berkeley/cs/amplab/carat/thrift/Feature.java	2012-10-03 10:26:45.240525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/Feature.java	2012-10-03 10:23:30.896520639 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class Feature implements org.apache.thrift.TBase<Feature, Feature._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Feature");
@@ -355,7 +353,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -363,7 +361,7 @@
     try {
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/HogBugReport.java android/edu/berkeley/cs/amplab/carat/thrift/HogBugReport.java
--- java/edu/berkeley/cs/amplab/carat/thrift/HogBugReport.java	2012-10-03 10:26:45.240525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/HogBugReport.java	2012-10-03 10:23:30.880520643 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class HogBugReport implements org.apache.thrift.TBase<HogBugReport, HogBugReport._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HogBugReport");
@@ -378,7 +376,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -386,7 +384,7 @@
     try {
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/HogsBugs.java android/edu/berkeley/cs/amplab/carat/thrift/HogsBugs.java
--- java/edu/berkeley/cs/amplab/carat/thrift/HogsBugs.java	2012-10-03 10:26:45.240525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/HogsBugs.java	2012-10-03 10:23:30.880520643 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class HogsBugs implements org.apache.thrift.TBase<HogsBugs, HogsBugs._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HogsBugs");
@@ -590,7 +588,6 @@
   public void setErrorWithoutIsSet(boolean value) {
     __isset_bit_vector.set(__ERRORWITHOUT_ISSET_ID, value);
   }
-
   public double getSamples() {
     return this.samples;
   }
@@ -766,7 +763,6 @@
         setErrorWithout((Double)value);
       }
       break;
-
     case SAMPLES:
       if (value == null) {
         unsetSamples();
@@ -833,10 +829,8 @@
 
     case ERROR_WITHOUT:
       return Double.valueOf(getErrorWithout());
-
     case SAMPLES:
       return Double.valueOf(getSamples());
-
     case SAMPLES_WITHOUT:
       return Double.valueOf(getSamplesWithout());
 
@@ -991,7 +985,6 @@
       if (this.errorWithout != that.errorWithout)
         return false;
     }
-
     boolean this_present_samples = true && this.isSetSamples();
     boolean that_present_samples = true && that.isSetSamples();
     if (this_present_samples || that_present_samples) {
@@ -1327,7 +1320,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -1337,7 +1330,7 @@
       __isset_bit_vector = new BitSet(1);
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/NetworkDetails.java android/edu/berkeley/cs/amplab/carat/thrift/NetworkDetails.java
--- java/edu/berkeley/cs/amplab/carat/thrift/NetworkDetails.java	2012-10-03 10:26:45.240525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/NetworkDetails.java	2012-10-03 10:23:30.880520643 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class NetworkDetails implements org.apache.thrift.TBase<NetworkDetails, NetworkDetails._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("NetworkDetails");
@@ -805,7 +803,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -815,7 +813,7 @@
       __isset_bit_vector = new BitSet(1);
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/ProcessInfo.java android/edu/berkeley/cs/amplab/carat/thrift/ProcessInfo.java
--- java/edu/berkeley/cs/amplab/carat/thrift/ProcessInfo.java	2012-10-03 10:26:45.240525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/ProcessInfo.java	2012-10-03 10:23:30.896520639 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class ProcessInfo implements org.apache.thrift.TBase<ProcessInfo, ProcessInfo._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProcessInfo");
@@ -579,7 +577,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -589,7 +587,7 @@
       __isset_bit_vector = new BitSet(1);
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/Registration.java android/edu/berkeley/cs/amplab/carat/thrift/Registration.java
--- java/edu/berkeley/cs/amplab/carat/thrift/Registration.java	2012-10-03 10:26:45.240525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/Registration.java	2012-10-03 10:23:30.896520639 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class Registration implements org.apache.thrift.TBase<Registration, Registration._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Registration");
@@ -669,7 +667,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -679,7 +677,7 @@
       __isset_bit_vector = new BitSet(1);
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/Reports.java android/edu/berkeley/cs/amplab/carat/thrift/Reports.java
--- java/edu/berkeley/cs/amplab/carat/thrift/Reports.java	2012-10-03 10:26:45.236525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/Reports.java	2012-10-03 10:23:30.880520643 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class Reports implements org.apache.thrift.TBase<Reports, Reports._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Reports");
@@ -1036,7 +1034,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -1046,7 +1044,7 @@
       __isset_bit_vector = new BitSet(1);
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
diff -Naur java/edu/berkeley/cs/amplab/carat/thrift/Sample.java android/edu/berkeley/cs/amplab/carat/thrift/Sample.java
--- java/edu/berkeley/cs/amplab/carat/thrift/Sample.java	2012-10-03 10:26:45.240525714 +0300
+++ android/edu/berkeley/cs/amplab/carat/thrift/Sample.java	2012-10-03 10:23:30.880520643 +0300
@@ -24,8 +24,6 @@
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 public class Sample implements org.apache.thrift.TBase<Sample, Sample._Fields>, java.io.Serializable, Cloneable {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Sample");
@@ -1665,7 +1663,7 @@
     try {
       write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
@@ -1675,7 +1673,7 @@
       __isset_bit_vector = new BitSet(1);
       read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
     } catch (org.apache.thrift.TException te) {
-      throw new java.io.IOException(te);
+      throw new java.io.IOException(te.getMessage());
     }
   }
 
